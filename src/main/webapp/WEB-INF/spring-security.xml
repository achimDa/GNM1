
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
     http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
     http://www.springframework.org/schema/security  
     http://www.springframework.org/schema/security/spring-security-4.0.xsd">

<!-- 	<beans:bean id="userDAO" class="com.servustech.spring.dao.UserDAOImpl" /> -->
<!-- 	<beans:bean id="loginService" -->
<!-- 		class="com.servustech.spring.service.LoginServiceImpl"> -->
<!-- 		<beans:property name="userDAO" ref="userDAO"/> -->
<!-- 	</beans:bean> -->
<beans:bean id="loginService"
		class="com.servustech.spring.service.LoginServiceImpl">
	</beans:bean>

	<!-- enable use-expressions -->
	<http auto-config="true" use-expressions="true">
		<intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/areaadmin**" access="hasRole('ROLE_AREAADMIN')" />
		<intercept-url pattern="/protectedareaadmin**"
			access="hasRole('ROLE_PROTECTEDAREAADMIN')" />
		<intercept-url pattern="/ranger**" access="hasRole('ROLE_RANGER')" />
		<intercept-url pattern="/autoriseduser**" access="hasRole('ROLE_AUTORISEDUSER')" />
		<intercept-url pattern="/public**" access="hasRole('ROLE_PUBLIC')" />
		<intercept-url pattern="/localadmin**" access="hasRole('ROLE_LOCALADMIN')" />
		<intercept-url pattern="/generaladmin**" access="hasRole('ROLE_GENERALADMIN')" />

		<!-- access denied page -->
		<access-denied-handler error-page="/403" />
		<form-login authentication-failure-url="/login?error"
			username-parameter="username" password-parameter="password" />
		<logout logout-success-url="/login?logout" />

		<!-- enable csrf protection -->
		<csrf />
	</http>

	<beans:bean id="encoder" 
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
		<beans:constructor-arg name="strength" value="11" />
	</beans:bean>
  
	<authentication-manager>
		<authentication-provider user-service-ref="loginService" >
		    <password-encoder ref="encoder" />
		</authentication-provider>
	</authentication-manager>

</beans:beans>  